#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/weechat/quickstart/
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
identifier = cyan
regex = white
replace = cyan

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && ${tg_tags} !!- ,notify_none, && (${tg_highlight} || ${tg_msg_pv}) && ${buffer.notify} > 0"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
buflist_buffer_scroll.arguments = "buflist_buffer_scroll"
buflist_buffer_scroll.command = "/mute /buffer_autoset add ${full_name} localvar_set_start_at ${my_start_at}"
buflist_buffer_scroll.conditions = "${_key} =~ -wheeldown$ || ${buffer[${pointer}].local_variables.start_at} !="
buflist_buffer_scroll.enabled = on
buflist_buffer_scroll.hook = hsignal
buflist_buffer_scroll.post_action = none
buflist_buffer_scroll.regex = "/.*/${if:${buffer[${pointer}].local_variables.start_at}==?0:${buffer[${pointer}].local_variables.start_at}}/my_start_at /.*/${calc:${my_start_at}${if:${_key}=~up&&${my_start_at}!=?-:+}1}/my_start_at"
buflist_buffer_scroll.return_code = ok
buflist_fold_symbol_click.arguments = "1001|buflist_mouse"
buflist_fold_symbol_click.command = "/toggle_bufautoset localvar_set_fold ${full_name}"
buflist_fold_symbol_click.conditions = "${localvar_type} == server && ${plugins.var.buflist.item.fold} != && (${plugins.var.buflist.item.buffer_number} != && ${_bar_item_col} == ${lengthscr:${buffer[last_gui_buffer].number}.} || ${plugins.var.buflist.item.buffer_number} == && ${_bar_item_col} == 0)"
buflist_fold_symbol_click.enabled = on
buflist_fold_symbol_click.hook = hsignal
buflist_fold_symbol_click.post_action = none
buflist_fold_symbol_click.regex = ""
buflist_fold_symbol_click.return_code = ok_eat
buflist_refresh_options.arguments = "weechat.bar.buflist.size*;plugins.var.buflist.*"
buflist_refresh_options.command = "/buflist refresh"
buflist_refresh_options.conditions = ""
buflist_refresh_options.enabled = on
buflist_refresh_options.hook = config
buflist_refresh_options.post_action = none
buflist_refresh_options.regex = ""
buflist_refresh_options.return_code = ok
buflist_resize.arguments = "buflist_resize"
buflist_resize.command = "/mute /set plugins.var.buflist.section.${my_modified_section}.size ${my_modified_section_size};/bar set ${_bar_name} size ${my_new_bar_size}"
buflist_resize.conditions = "${_key}=~down || ${_key}=~up && (${_bar_item_col} < ${plugins.var.buflist.section.left.size} && ${plugins.var.buflist.section.left.size} > 1 || ${_bar_item_col} >= ${plugins.var.buflist.section.left.size} && ${plugins.var.buflist.section.right.size} > 1)"
buflist_resize.enabled = on
buflist_resize.hook = hsignal
buflist_resize.post_action = none
buflist_resize.regex = "/.*/${if:${_key}=~up$?-:+}/my_action /.*/${if:${_bar_item_col}<${plugins.var.buflist.section.left.size}?left:right}/my_modified_section /.*/${calc:${plugins.var.buflist.section.${my_modified_section}.size} ${my_action} 1}/my_modified_section_size /.*/${if:${weechat.bar.${_bar_name}.size}!=?${calc:${weechat.bar.${_bar_name}.size} ${my_action} 1}:0}/my_new_bar_size"
buflist_resize.return_code = ok
buflist_tools.arguments = "buflist_tools;manage pascalpoitras's custom buflist (https://gist.github.com/pascalpoitras/8406501);resize <buflist_size> <left_size>|? [<right_size>] || hide|show|itoggle|showonly|hideonly <item>|-all [<item>|-all...] || enable|disable|toggle <feature> [<feature>...];       resize: resize the buflist size and the two sections${\n}         hide: hide one or more item(s)${\n}         show: show one or more item(s)${\n}      itoggle: toggle one or more item(s)${\n}     showonly: hide all items except...${\n}     hideonly: show all items except...${\n}       enable: enable a feature that change the behavior of the buflist${\n}      disable: disable a feature that change the behavior of the buflist${\n}       toggle: toggle a feature that change the behavior of the buflist${\n} buflist_size: new size for the buflist${\n}    left_size: size of left section${\n}   right_size: size of right section${\n}         item: an item (buffer_number, fold, indent, nick_prefix, buffer_name, lag, filter, relay_count, extra, hotlist)${\n}         -all: do action on all items${\n}      feature: a feature (indent_tree, real_net_name, show_hidden_buffers)${\n}${\n}The buflist is composed of two sections. The left section is composed of nine items. The buffer number, the fold symbol (servers only), the indentation, the nick prefix (channels only), the buffer name, the lag (servers only), the filter (on some buffer like fset, scripts...), the relay count (for the relay buffer) and extra infos about a buffer. The right section is only composed of hotlist. The two sections can be resized independently.${\n}${\n}Exemples:${\n}  Resize the bar to 20 with the size 15 for left section and 5 for right section:${\n}    /buflist_tools resize 20 15;resize 20 15 || show|hide|itoggle|hideonly|showonly buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-all|%* || enable|disable|toggle indent_tree|real_net_name|show_hidden_buffers|%*"
buflist_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
buflist_tools.conditions = "${tg_argv_eol1} =~ ^resize +[0-9]+ +([0-9]+( +[0-9]+)?|\? +[0-9]+)$ || ${tg_argv_eol1} =~ ^(hide|show|itoggle|showonly|hideonly) +(([[:alnum:]_]+|-all)( +|$))+$ || ${tg_argv_eol1} =~ ^(enable|disable|toggle) +([[:alnum:]_]+( +|$))+$"
buflist_tools.enabled = on
buflist_tools.hook = command
buflist_tools.post_action = none
buflist_tools.regex = "/.*/${tg_argv1}/my_action /.*/${if:${my_action}==resize?${tg_argv_eol2}}/my_resize_cmds ===^([^ ]+) +([^ ]+)( +([^ ]+))?$===${define:my_buflist_size,${re:1}}${define:my_left_size,${re:2}}${define:my_right_size,${re:4}}/mute /set plugins.var.buflist.section.left.size ${if:${my_left_size}=~[0-9]+?${my_left_size}:${calc:${my_buflist_size}-${my_right_size}}};/mute /set plugins.var.buflist.section.right.size ${if:${my_right_size}=~[0-9]+?${my_right_size}:${calc:${my_buflist_size}-${my_left_size}}};/bar set buflist size ${my_buflist_size}===my_resize_cmds /.*/${if:${my_action}=~^(hide|show|itoggle|showonly|hideonly)$?${tg_argv_eol2}}/my_item_cmds /.*/buffer_number fold indent nick_prefix buffer_name lag filter relay_count extra hotlist/my_items /-all/${my_items}/my_item_cmds /.*/${if:${my_action}=~^(hide|show)only$?${my_items}}/my_hide_or_show_everything ===[^ ]+===/mute /set plugins.var.buflist.item.${re:0} ${if:${my_action}==hideonly};===my_hide_or_show_everything ===[^ ]+===/mute /set plugins.var.buflist.item.${re:0} ${if:${my_action}=~^hide?0:${if:${my_action}=~^show?1:\x5c${if:\x5c${plugins.var.buflist.item.${re:0}${\x5cx7d}?0:1${\x5cx7d}}};===my_item_cmds /.*/${my_hide_or_show_everything}${re:0}/my_item_cmds /.*/${if:${my_action}=~^(enable|disable|toggle)$?${tg_argv_eol2}}/my_look_cmds ===[^ ]+===/mute /set plugins.var.buflist.look.${re:0} ${if:${my_action}==disable?0:${if:${my_action}==enable?1:${if:${plugins.var.buflist.look.${re:0}}!=?0:1}}};===my_look_cmds /.*/${my_resize_cmds}${my_item_cmds}${my_look_cmds}/my_cmds_to_run"
buflist_tools.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "s==^((/(msg|m|quote) +(-server +[^ \n]+ +)?nickserv +(id|identify|set +password|ghost +[^ \n]+|release +[^ \n]+|regain +[^ \n]+|recover +[^ \n]+|setpass +[^ \n]+) +)|/oper +[^ \n]+ +|/quote +pass +|/secure +(passphrase|decrypt|set +[^ \n]+) +)([^\n]*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "s==^(/(msg|m|quote) +(-server +[^ \n]+ +)?nickserv +register +)([^ \n]+)([^\n]*)==${re:1}${hide:*,${re:4}}${re:5}"
cmd_pass_register.return_code = ok
day_changed_upgrade_scripts.arguments = "day_changed"
day_changed_upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
day_changed_upgrade_scripts.conditions = ""
day_changed_upgrade_scripts.enabled = on
day_changed_upgrade_scripts.hook = signal
day_changed_upgrade_scripts.post_action = none
day_changed_upgrade_scripts.regex = ""
day_changed_upgrade_scripts.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "s==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
nick_validation.arguments = "input_text_display"
nick_validation.command = ""
nick_validation.conditions = "${tg_string_nocolor} =~ ^/nick . && ${buffer.plugin.name} == irc"
nick_validation.enabled = on
nick_validation.hook = modifier
nick_validation.post_action = none
nick_validation.regex = "/.*/${tg_string_nocolor}/my_nick ===^/nick (.+)===${re:1}===my_nick /^-all (.+)/${re:1}/my_nick ===.*===${if:${tg_string_nocolor}=~^/nick -all[ ]?${info:python_eval,infolist = weechat.infolist_get('irc_server', '', '')\nwhile weechat.infolist_next(infolist):\n if weechat.infolist_integer(infolist, 'is_connected'): print(weechat.infolist_string(infolist, 'name') + ' ')\nweechat.infolist_free(infolist)}:${server}} ===my_servers ===[^ ]+===\n${define:my_nicklen,${info:irc_server_isupport_value,${re:0},NICKLEN}}${if:${info:irc_is_nick,${re:0},${my_nick}}!=?${color:16,46}:${color:16,163}}${re:0} ${color:reverse} NICKLEN = ${calc:${my_nicklen} - ${length:${my_nick}}}/${my_nicklen}  CASEMAPPING = ${info:irc_server_isupport_value,${re:0},CASEMAPPING}  UTF8MAPPING = ${if:${info:irc_server_isupport_value,${re:0},UTF8MAPPING}!=?${info:irc_server_isupport_value,${re:0},UTF8MAPPING}:no}${color:16,default}===my_servers /.*/${re:0} ${my_servers}/tg_string"
nick_validation.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "s==^(/(server|connect) [^\n]*-(sasl_)?password=)([^ \n]+)([^\n]*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
toggle_bufautoset.arguments = "toggle_bufautoset;toggle bufautoset options;<buffer_property> <buffer_fullname>;buffer_property: name of the property${\n}buffer_fullname: name of the buffer${\n}${\n}The buffer_autoset.py script has no toggle mechanism so this command bring this functionality. Also, the script does not reset a property or localvar after deleting them. For example, if you type /buffer_autoset add irc.libera.#weechat localvar_set_something 1, and then, /buffer_autoset del irc.libera.#weechat.localvar_set_something, the localvar will still appears in /buffer localvar until you close and reoppen the buffer. This command will remove the localvar and hidden property upon deletion. You should use this command only for properties that take 0 or 1 as value or localvar that take 0 or 1.;;"
toggle_bufautoset.command = "/mute /buffer_autoset ${my_action} ${my_params};/command -buffer ${my_full_name} * /buffer set ${my_property} ${if:${my_action}==add?1:0}"
toggle_bufautoset.conditions = "${tg_argv2} !="
toggle_bufautoset.enabled = on
toggle_bufautoset.hook = command
toggle_bufautoset.post_action = none
toggle_bufautoset.regex = "/.*/${tg_argv1}/my_property /.*/${tg_argv2}/my_full_name /.*/${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}!=?del:add}/my_action /.*/${if:${my_action}==add? ${my_full_name} ${my_property} 1: ${my_full_name}.${my_property}}/my_params"
toggle_bufautoset.return_code = ok
utils_search_server_buffer_ptr.arguments = "search_server_buffer_ptr"
utils_search_server_buffer_ptr.command = ""
utils_search_server_buffer_ptr.conditions = "${tg_arguments} != && (${buffer[${tg_arguments}].local_variables.script_name} =~ ^(matrix|slack)$ || ${buffer[${tg_arguments}].local_variables.plugin} =~ ^(irc|matrix))$"
utils_search_server_buffer_ptr.enabled = on
utils_search_server_buffer_ptr.hook = info
utils_search_server_buffer_ptr.post_action = none
utils_search_server_buffer_ptr.regex = "/.*/${buffer[${tg_arguments}].local_variables.plugin}/my_plugin /.*/${buffer[${tg_arguments}].local_variables.script_name}/my_script /.*/${buffer[${tg_arguments}].local_variables.server}/my_server /.*/${info:buffer,${if:${my_plugin}=~^(irc|matrix)$||${my_script}==matrix?${my_plugin}.server.${my_server}:${my_plugin}.${my_server}}}/tg_info"
utils_search_server_buffer_ptr.return_code = ok
