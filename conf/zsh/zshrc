# -----------------
# Zprof - Use `time ZSH_PROF=1 zsh -i -c exit` to profile startup time
# -----------------

if [ -n "${ZSH_PROF+1}" ]; then
    zmodload zsh/zprof
fi

# -----------------
# Nix
# -----------------

if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi

# -----------------
# Homebrew
# -----------------

if [[ $OSTYPE == 'darwin'* ]]; then
  export PATH="/usr/local/sbin:/opt/homebrew/bin:$PATH"
fi

# -----------------
# TMUX
# -----------------

if [[ -z "$TMUX" ]]; then
  if [[ $OSTYPE == 'darwin'* ]]; then
   export GPG_TTY=$TTY
   export ZSH_TMUX_ITERM2=true
   ZSH_TMUX_OPTS="-CC"
  fi
  # Only run tmux on demand (due to latency when overseas)
  alias tm='tmux $ZSH_TMUX_OPTS -u new -A -D -t iterm2'
  alias tmux-re='tmux source ~/.config/tmux/tmux.conf'
  tmux-ti() { echo -ne "\033k$1\007" } # sets the title of the tab/window
fi

# -----------------
# Mise
# -----------------

# should already be activated in zimrc
# eval "$(mise activate zsh)"

export GOPATH=$HOME/Workspace/go/
export PATH="$PATH:$GOPATH/bin:$GOROOT/bin"
({
  mise use -g node
  mise use -g go
} 2>&1 > /dev/null &)

# --------------------
# Module configuration
# --------------------

# zsh-history-substring-search
# export HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND=bg=025,fg=white,bold

# zsh-fzf-history-search (copying fzf-tab's lib/-ftb-fzf)
# export ZSH_FZF_HISTORY_SEARCH_FZF_EXTRA_ARGS="--layout=reverse --print-query --tiebreak=begin --height=${FZF_TMUX_HEIGHT:=$(( lines > LINES / 3 * 2 ? LINES / 3 * 2 : lines ))} --color=hl:075,hl+:075,bg+:025 --ansi --delimiter=\x00 --cycle"

# fzf-tab
# zstyle ':fzf-tab:*' fzf-flags --color=hl:075,hl+:075,bg+:025
# zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'
# zstyle ':fzf-tab:complete:(-command-|-parameter-|-brace-parameter-|export|unset|expand):*' fzf-preview 'echo ${(P)word}'

# ------------------
# ZSH / Zim
# ------------------

WORDCHARS=${WORDCHARS//[\/]} # Remove path separator from WORDCHARS.
unsetopt share_history # Don't share history across tabs
setopt globdots # Show hidden folders in completions
setopt HIST_IGNORE_ALL_DUPS # Remove older command from the history if a duplicate is to be added.
setopt CORRECT # Prompt for spelling correction of commands.
SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? ' # Customize spelling correction prompt.

ZIM_HOME=${ZDOTDIR}/.zim
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
source ${ZIM_HOME}/init.zsh

# ------------------------------
# Module Configuration (Post-init)
# ------------------------------

#
# zsh-history-substring-search
#

# zmodload -F zsh/terminfo +p:terminfo
## Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
# for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
# for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
# unset key

# Zoxide
# export _ZO_EXCLUDE_DIRS= # $HOME:$HOME/private/*:
eval "$(zoxide init zsh --hook prompt)"

# The FUCK?!
eval $(thefuck --alias f --yeah)

# Direnv
eval "$(direnv hook zsh)"

# Weechat
export WEECHAT_HOME=~/.config/weechat 

# -----------------
# Starship
# -----------------

# Load starship
eval "$(starship init zsh)"

if [ -n "${ZSH_PROF+1}" ]; then
    zprof
fi

###############################################################################

# Editors
export EDITOR=nvim
export GIT_EDITOR=nvim
export KUBE_EDITOR=nvim
export BAT_THEME="Nord"

# Better commands..
alias ls=eza
alias cd=z
alias lg=lazygit
alias rgb=batgrep
alias man=batman
alias find=fd
alias dig=dog
alias cat=bat

# Shortcuts
if [[ $OSTYPE == 'darwin'* ]]; then
  alias intel="env /usr/bin/arch -x86_64 /bin/zsh"
  alias arm="env /usr/bin/arch -arm64 /bin/zsh"
else
  alias s="systemctl"
  alias sr="systemctl daemon-reload"
  alias j="journalctl"
  alias s="sudo --preserve-env=PATH env"
  alias d="sudo docker"
fi
